package org.example.lec0224;

class Main{
    public static void main(String[] args) {
        new 청둥오리();
    }
}
//extends Object가 생략된것!
class 생물{
    void 호흡(){}
}
class 동물 extends 생물{
    void 먹기(){}
}
class 오리 extends 동물{
    void 날기(){}
}
class 청둥오리 extends 오리{
    void 장거리_이동(){}
}


/* 가정
우리는 게임개발회사에 입사했다.
우리에게는 성격좋은 사수 한명이 있다.
내가 개발할 게임은 오리시뮬레이션 게임이다.
선임이 나의 개발을 도와주진 않지만 조언은 해준다.
*/

/* 요구사항
- D1 요구 : 오리를 생성하고 날게하시오.
- D1 완료 : 클래스와 메서드를 만들어서 처리
- D2 요구 : 게임의 디테일을 살리기 위해서 `청둥오리`와 `흰오리`를 생성하고 날게하시오.
- D2 완료 : 클래스와 메서드를 만들어서 처리
- D3 요구 : 오리 계열의 클래스에 날다 메서드가 중복되었습니다. 중복을 제거해주세요.
- D3 완료 : 상속을 사용해서 처리
- D4 요구 : 게임의 재미를 위하여 고무오리를 추가하고 날게 하시오.
- D4 완료 : 클래스와 메서드를 만들어서 처리
- D5 요구 : 주말 주주회의에서 고무오리가 하늘을 날아다니는 것에 대해서 태클이 들어왔습니다. 고무오리 계열은 하늘을 날 수 없게 해주세요.
- D5 완료 : 메서드 오버라이드를 사용해서 처리
- D6 요구 : 고무오리가 반응이 좋습니다. 고무2오리를 추가하고 날게 해주세요.
- D6 완료 : 고무오리가 반응이 좋습니다. 고무2오리를 추가하고 날게 해주세요.
- D7 요구 : 고무오리계열에서 날다 메서드의 중복을 제거해주세요.
- D7 완료 : 상속으로 해결
- D8 요구 : 상속에는 한계가 있습니다. 상속을 사용하지 않고 고무오리계열의 중복을 제거해주세요.
- D8 요구 : 자바에서 다중상속은 불가능 합니다. 상속에는 한계가 있습니다. 상속을 사용하지 않고 고무오리계열의 중복을 제거해주세요.
- D8 완료 : 상속이 아닌 구성을 써서 해결
*/

//class Main {
//    public static void main(String[] args) {
//        청둥오리 a청둥오리 = new 청둥오리();
//        a청둥오리.날다();
//        // 출력 : 오리가 날개로 날아갑니다.
//
//        흰오리 a흰오리 = new 흰오리();
//        a흰오리.날다();
//        // 출력 : 오리가 날개로 날아갑니다.
//
//        고무오리 a고무오리 = new 고무오리();
//        a고무오리.날다();
//        // 출력 : 저는 날 수 없어요. ㅜㅠ
//
//        고무2오리 a고무2오리 = new 고무2오리();
//        a고무2오리.날다();
//        // 출력 : 저는 날 수 없어요. ㅜㅠ
//    }
//}
//
//abstract class 오리 {
//    비행아이템 a비행아이템;
//
//    오리() {
//        a비행아이템 = new 날개();
//    }
//
//    void 날다() {
//        a비행아이템.작동();
//    }
//}
//
//class 흰오리 extends 오리 {
//
//}
//
//class 청둥오리 extends 오리 {
//
//}
//
//class 고무오리 extends 오리 {
//    고무오리() {
//        a비행아이템 = new 망가진날개();
//    }
//}
//
//class 고무2오리 extends 오리 {
//    고무2오리() {
//        a비행아이템 = new 망가진날개();
//    }
//}
//
//abstract class 비행아이템 {
//    abstract void 작동();
//}
//
//class 날개 extends 비행아이템 {
//    void 작동() {
//        System.out.println("날개로 날아갑니다.");
//    }
//}
//
//class 망가진날개 extends 비행아이템 {
//    void 작동() {
//        System.out.println("저는 못 날아요 ㅠㅠ");
//    }
//}
//class Main {
//    public static void main(String[] args) {
//        전사 a전사 = new 홍길동(); //홍길동 클래스로 객체를 만들면 홍길동이라는 이름을 가지고 있다
//        a전사.a무기 = new 활();
//
//        a전사.공격();
//        // 출력 => 홍길동이(가) 활(으)로 공격합니다.
//
//        a전사 = new 홍길순();
//
//        a전사.공격();
//        // 출력 => 홍길순이(가) 칼(으)로 공격합니다.
//
//        a전사.a무기 = new 창();
//        a전사.공격();
//        // 출력 => 홍길순이(가) 창(으)로 공격합니다.
//    }
//}
//
//abstract class 전사{
//    String 이름;
//    무기 a무기;
//
//    public void 공격() {
//        a무기.작동(이름);
//    }
//}
//
//abstract class 무기{
//    String 무기;
//    public void 작동(String 사용자) {
//        System.out.println(사용자 +"이(가) " +무기+"로 공격합니다.");
//    }
//}
//class 활 extends 무기{
//    활(){
//        무기 = "활";
//    }
//}
//class 창 extends 무기{
//    창(){
//        무기 = "창";
//    }
//}
//class 칼 extends 무기{
//    칼(){
//        무기 = "칼";
//    }
//}
//class 홍길동 extends 전사{
//    홍길동(){
//        이름 = "홍길동";
//    }
//}
//
//class 홍길순 extends 전사{
//    홍길순(){
//        이름 = "홍길순";
//        a무기 = new 칼();
//    }
//}
// 문제 : 아래와 같이 출력 되도록 해주세요.
// 조건 : 생성자를 단 1개만 사용해주세요.

//class Main {
//    public static void main(String[] args) {
//        병사 a병사 = new 병사();
//        a병사.이름 = "홍길동";
//
//        a병사.자기소개();
//        // 안녕하세요. 저는 홍길동 이병 입니다.
//
//        a병사.진급();
//
//        a병사.자기소개();
//        // 안녕하세요. 저는 홍길동 일병 입니다.
//
//        a병사.진급();
//
//        a병사.자기소개();
//        // 안녕하세요. 저는 홍길동 상병 입니다.
//    }
//}
//
//class 병사{
//    String 이름;
//    void 자기소개(){
//        System.out.println("안녕하세요 저는 " + 이름+ "이병입니다.");
//    }
//    void 진급(){}
//}
//class Main {
//    public static void main(String[] args) {
//        int 엄지손가락_길이 = new 사람().a왼팔.a손.a엄지손가락.길이;
//
//        System.out.println(엄지손가락_길이 + "cm");
//        // 출력 : 5cm
//    }
//}
//
//class 사람 {
//    팔 a왼팔;
//
//    //썩 좋은 구조는 아님
//    사람() {
//        a왼팔 = new 팔();
//        a왼팔.a손 = new 손();
//        a왼팔.a손.a엄지손가락 = new 손가락();
//        a왼팔.a손.a엄지손가락.길이 = 5;
//    }
//}
//
//class 팔 {
//    손 a손;
//}
//
//class 손 {
//    손가락 a엄지손가락;
//}
//
//class 손가락 {
//    int 길이;
//}
// 조건 : 생성자를 오직 3개만 사용해서 만들어주세요
//class Main {
//    public static void main(String[] args) {
//        int 엄지손가락_길이 = new 사람().a왼팔.a손.a엄지손가락.길이;
//
//        System.out.println(엄지손가락_길이 + "cm");
//        // 출력 : 5cm
//    }
//}
//class 사람{
//    팔 a왼팔;
//    사람(){
//        a왼팔 = new 팔();
//    }
//}
//class 팔{
//    손 a손;
//    팔(){
//        a손 = new 손();
//    }
//}
//class 손{
//    손가락 a엄지손가락;
//    손(){
//        a엄지손가락 = new 손가락();
//        a엄지손가락.길이 = 5;
//    }
//}
//
//class 손가락{
//    int 길이;
//}

//class Main {
//    public static void main(String[] args) {
//        int 엄지손가락_길이 = new 사람().a왼팔.a손.a엄지손가락.길이;
//
//        System.out.println(엄지손가락_길이 + "cm");
//        // 출력 : 5cm
//    }
//}
//
//class 사람{
//    팔 a왼팔;
//    사람(){
//        a왼팔 = new 팔();
//    }
//}
//
//class 팔{
//    손 a손;
//    팔(){
//        a손 = new 손();
//    }
//}
//
//class 손{
//    손가락 a엄지손가락;
//
//    손(){
//        a엄지손가락 = new 손가락();
//    }
//}
//
//class 손가락{
//    int 길이;
//    손가락(){
//        길이 = 5;
//    }
//}


//class Main {
//    public static void main(String[] args) {
//        전사 a전사1 = new 전사();
//
//        a전사1.a왼손무기 = new 칼();
//        a전사1.공격();
//        // 출력 => 전사가 왼손으로 칼(을)를 사용합니다.
//
//        전사 a전사2 = new 전사();
//        a전사2.a왼손무기 = new 창();
//        a전사2.a오른손무기 = new 도끼();
//        a전사2.공격();
//        // 출력 => 전사가 왼손으로 창(을)를 사용합니다.
//        // 출력 => 전사가 오른손으로 도끼(을)를 사용합니다.
//    }
//}
//class 전사{
//    무기 a왼손무기;
//    무기 a오른손무기;
//    void 공격(){
//        if(a왼손무기 != null){
//            a왼손무기.작동("전사", "왼손");
//        }
//        if(a오른손무기 != null){
//            a오른손무기.작동("전사", "왼손");
//        }
//    }
//}
//class 무기{
//    void 작동(String 사용자, String 사용손){}
//}
//class 칼 extends 무기{
//    void 작동(String 사용자, String 사용손) {
//        System.out.println(사용자 + "가 " + 사용손 + "으로 칼을 사용합니다");
//    }
//}
//class 창 extends 무기{
//    void 작동(String 사용자, String 사용손) {
//        System.out.println(사용자 + "가 " + 사용손 + "으로 창을 사용합니다");
//    }
//}
//class 도끼 extends 무기{
//    void 작동(String 사용자, String 사용손) {
//        System.out.println(사용자 + "가 " + 사용손 + "으로 도끼를 사용합니다");
//    }
//}
//class Main {
//    public static void main(String[] args) {
//        전사 a전사 = new 전사();
//
//        a전사.a무기1 = new 칼();
//        a전사.공격();
//        // 출력 => 전사가 칼로 공격합니다.
//
//        a전사.a무기1 = new 활();
//        a전사.공격();
//        // 출력 => 전사가 활로 공격합니다.
//
//        a전사.a무기2 = new 칼();
//        a전사.공격();
//        // 출력 => 전사가 활로 공격합니다.
//        // 출력 => 전사가 칼로 공격합니다.
//    }
//}
//
//class 전사{
//    무기 a무기1;
//    무기 a무기2;
//    void 공격() {
//        if ( a무기1 != null ) {
//            System.out.print("전사가 ");
//            a무기1.작동();
//        }
//
//        if ( a무기2 != null ) {
//            System.out.print("전사가 ");
//            a무기2.작동();
//        }
//    }
//}
//
//class 무기 {
//    void 작동() {}
//}
//class 칼 extends 무기 {
//    void 작동() {
//        System.out.println("칼로 공격 합니다.");
//    }
//}
//class 활 extends 무기 {
//    void 작동() {
//        System.out.println("활로 공격 합니다.");
//    }
//}

//class Main {
//    public static void main(String[] args) {
//        전사 a전사 = new 전사();
//        a전사.공격();
//        // 출력 => 아직 무기가 없습니다.
//        a전사.a무기 = new 칼();
//        a전사.공격();
//        // 출력 => 칼로 공격합니다.
//    }
//}
//
//class 전사{
//    무기 a무기;
//    void 공격(){
//        if(a무기 == null){
//            System.out.println("아직 무기가 없습니다");
//        }else{
//            a무기.작동();
//        }
//    }
//}
//
//class 무기{
//    void 작동(){}
//}
//class 칼 extends 무기{
//    void 작동(){
//        System.out.println("칼로 공격합니다");
//    }
//}
// 문제 : 아래가 실행되도록 해주세요.
// 조건 : 매개변수를 사용하지 말아주세요.
//class Main {
//    public static void main(String[] args) {
//        전사 a전사 = new 전사();
//        String 이름 = "칸";
//        a전사.이름 = 이름;
//        a전사.나이 = 20;
//        a전사.자기소개();
//        a전사.나이++;
//        a전사.자기소개();
//        a전사.나이 = 30;
//        a전사.이름 = "카니";
//        a전사.자기소개();
//        a전사.a무기 = new 활();
//        a전사.공격();
//        // 출력 : 카니가 활로 공격합니다.
//        a전사.a무기 = new 칼();
//        a전사.공격();
//        // 출력 : 카니가 칼로 공격합니다.
//    }
//}
//
//class 전사 {
//    // 인스턴스 변수
//    String 이름;
//    // 인스턴스 변수
//    int 나이;
//    // 인스턴스 변수
//    무기 a무기;
//    void 자기소개() {
//        System.out.println("안녕하세요. 저는 " + this.나이 + "살 " + this.이름 + " 입니다.");
//    }
//
//    void 공격(){
//        a무기.사용자명 = 이름;
//        a무기.작동();
//    }
//}
//
//class 무기 {
//    String 사용자명;
//    void 작동(){}
//}
//
//class 칼 extends 무기 {
//    void 작동() {
//        System.out.println(사용자명 + "이/가 칼로 공격합니다.");
//    }
//}
//
//class 활 extends 무기 {
//    void 작동() {
//        System.out.println(사용자명 + "이/가 활로 공격합니다.");
//    }
//}
//class Main {
//    public static void main(String[] args) {
//        전사 a전사 = new 전사();
//
//        String 이름 = "칸";
//        a전사.이름 = 이름;
//        a전사.나이 = 20;
//        a전사.자기소개();
//
//        a전사.나이++;
//        a전사.자기소개();
//
//        a전사.나이 = 30;
//        a전사.이름 = "카니";
//        a전사.자기소개();
//
//        a전사.a무기 = new 활();
//        a전사.공격();
//        // 출력 : 카니가 활로 공격합니다.
//
//        a전사.a무기 = new 칼();
//        a전사.공격();
//        // 출력 : 카니가 칼로 공격합니다.
//    }
//}
//
//class 전사 {
//    // 인스턴스 변수
//    String 이름;
//    // 인스턴스 변수
//    int 나이;
//    // 인스턴스 변수
//    무기 a무기;
//
//    void 자기소개() {
//        System.out.println("안녕하세요. 저는 " + this.나이 + "살 " + this.이름 + " 입니다.");
//    }
//
//    public void 공격(){
//        a무기.작동(이름);
//    }
//}
//
//class 무기 {
//    void 작동(String 사용자명){}
//}
//
//class 칼 extends 무기 {
//    void 작동(String 사용자명){
//        System.out.println(사용자명 + "이 칼로 공격합니다");
//    }
//}
//
//class 활 extends 무기 {
//    void 작동(String 사용자명){
//        System.out.println(사용자명 + "이 활로 공격합니다");
//    }
//}